{"version":3,"sources":["icons/checked.svg","scenes/TodoItem/TodoItem.js","scenes/Footer/Footer.js","scenes/Main/Main.js","scenes/NotFound/NotFound.js","scenes/router.js","index.js"],"names":["module","exports","__webpack_require__","p","TodoItem","props","tasks","handleChange","removeTask","match","filterBy","console","log","path","completedStyle","display","fontStyle","color","textDecoration","chekStyle","background","concat","require","backgroundRepeat","backgroundPosition","filtredTasks","filter","task","checked","filterTask","react_default","a","createElement","className","map","item","index","key","style","id","type","onChange","text","onClick","Footer","_ref","clearCompleted","isComplited","items","length","react_router_dom","to","routes","main","active","completed","visibility","App","compose","withState","withHandlers","event","setValue","target","value","onSubmit","preventDefault","inputValue","count","setItems","setTasks","Object","toConsumableArray","updatedTask","splice","htmlFor","placeholder","scenes_TodoItem_TodoItem","scenes_Footer_Footer","NotFound","Router","react_router","exact","component","Main","defineProperty","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.97c2827a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/checked.c530de65.svg\";","import React from 'react';\nimport './TodoItem.css'; \nimport { routes } from '../router';\n\n\n\nfunction TodoItem( props ) {\n  const { tasks, handleChange, removeTask, filterBy, match } = props\n  console.log(match.path);\n\n  const completedStyle = {\n    display: \"block\",\n    fontStyle: \"italic\",\n    color: \"#cdcdcd\",\n    textDecoration: \"line-through\"\n  }\n\n  const chekStyle = {\n    background: `url(${require('../../icons/checked.svg')})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundPosition: \"center\"\n  }\n\n  let filtredTasks = filterTask(match.path, tasks);\n\n  return (\n    <ul className=\"todo-item-list\" >\n      {\n        filtredTasks.map((item, index) => (\n\n          <li key={index} className=\"todo-item\">\n\n            <label\n              style={item.checked ? chekStyle : null}\n              className=\"checkbox\"\n            >\n\n              <input\n                id=\"chek\"\n                type=\"checkbox\"\n                checked={item.checked}\n                onChange={() => handleChange(item.id)}\n              />\n            </label>\n            <p style={item.checked ? completedStyle : null} > {item.text} </ p>\n\n            <button onClick={() => removeTask(index)}>  &#10005; </button>\n\n          </li>\n        ))}\n    </ul>\n  )\n}\n\nfunction filterTask(filter, tasks) {\n  let filtredTasks = [];\n  switch (filter) {\n    case '/completed':\n      filtredTasks = tasks.filter(task => task.checked);\n      break;\n    case '/active':\n      filtredTasks = tasks.filter(task => !task.checked);\n      break;\n    case '/':\n      filtredTasks = tasks;\n      break;\n  }\n  return filtredTasks;\n}\n\n\nexport default TodoItem;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Footer.css';\nimport { routes } from '../router';\n\nfunction Footer({ clearCompleted, tasks}) {\n\n  const isComplited = tasks.filter(task => task.checked);\n  const items = tasks.length - isComplited.length\n\n  if (!tasks.length) return (<footer></footer>);\n  return (\n    <footer>\n      <div className=\"counter\">{items} items left</div>\n      <div\n        className=\"sort-button\"\n      >\n        <Link className=\"link\" to={routes.main} >\n          All\n        </Link>\n        <Link className=\"link\" to={routes.active}>\n          Active\n       </Link>\n        <Link className=\"link\" to={routes.completed}>\n          Completed\n        </Link>\n      </div>\n      <button\n        className=\"clearCompleted\"\n        onClick={() => { clearCompleted() }}\n        style={!isComplited ? null : { visibility: \"visible\" }}>\n        Clear completed</button>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react';\nimport './Main.css';\nimport TodoItem from '../TodoItem/TodoItem';\nimport Footer from '../Footer/Footer';\nimport { compose, withStateHandlers, withState, withHandlers } from 'recompose';\n\nconst Layout = ({\n  tasks,\n  onSubmit,\n  onChange,\n  inputValue,\n  handleChange,\n  removeTask,\n  clearCompleted,\n  match\n}) => {\n\n  return (\n    <div className=\"App\">\n      <h1>todos</h1>\n      <div className=\"input-board\">\n        <form className=\"print-task\" onSubmit={onSubmit}>\n          <label\n            htmlFor=\"print-task\"\n            style={tasks.length ? { visibility: \"visible\" } : { visibility: \"hidden\" }}\n          >\n            &#10095;\n            </label>\n          <input\n            id=\"print-task\"\n            placeholder=\"What needs to be done?\"\n            type=\"text\"\n            onChange={onChange}\n            value={inputValue}\n          />\n        </form>\n\n        <TodoItem\n          tasks={tasks}\n          handleChange={handleChange}\n          removeTask={removeTask}\n          match={match}\n        />\n        <Footer\n          tasks={tasks}\n          clearCompleted={clearCompleted}\n          match={match}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst App = compose(\n  withState('inputValue', 'setValue', ''),\n  withState('tasks', 'setTasks', []),\n  withState('items', 'setItems', 0),\n  withHandlers({\n    onChange: props => event => {\n      props.setValue(event.target.value)\n    },\n    onSubmit: props => event => {\n      event.preventDefault();\n      if (!props.inputValue) return;\n      let count = props.items;\n      count += 1;\n      props.setItems(count);\n      props.setTasks([\n        ...props.tasks,\n        {\n          text: props.inputValue,\n          checked: false,\n          id: props.items\n        }]);\n      props.setValue('')\n    }\n  }),\n\n  withHandlers({\n    handleChange: props => id => {\n      const updatedTask = [...props.tasks].map(task => {\n        if (task.id === id) task.checked = !task.checked;\n        return task\n      })\n      props.setTasks(updatedTask)\n    },\n    removeTask: props => index => {\n      const updatedTask = [...props.tasks]\n      updatedTask.splice(index, 1);\n      props.setTasks(updatedTask)\n      props.setItems(props.tasks.length)\n    },\n    clearCompleted: props => () => {\n      let updatedTask = props.tasks.filter(task => {\n        return task.checked === false;\n      })\n      props.setTasks(updatedTask)\n    }\n  }),\n)(Layout)\n\nexport default App;\n","import React from 'react';\n\nfunction NotFound () {\n    return <div>404 Not Found</div>\n}\n\nexport default NotFound;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Main from './Main/Main';\nimport NotFound from './NotFound/NotFound'\n\n\nexport const routes = {\n    main: '/',\n    active: '/active',\n    completed: '/completed'\n};\n\n \nexport default  function Router() {\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Route exact path={routes.main} component={Main} />\n                <Route path={routes.completed} component={Main} />\n                <Route path={routes.active} component={Main} />\n                <Route component={NotFound} component={NotFound} />  \n            </Switch>\n        </BrowserRouter>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Router from './scenes/router'\nimport './index.css';\n\n\nclass App extends React.Component {\n    render(){\n        return <Router />\n    }\n}\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}